# PAL entrypoint
loader.entrypoint = "file:{{ gramine.libos }}"
# executable entrypoint
libos.entrypoint = "/usr/lib/jvm/java-1.11.0-openjdk-amd64/bin/java"
# log level (error, warning, debug, trace, all or none) passed in through Makefile
loader.log_level = "{{ log_level }}"
# command line arguments
loader.argv_src_file = "file:java_args.txt"

# in-Gramine visible path to search for libraries
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

# mount all required files and directories from host (uri) to Gramine (path) using default 'chroot' type
fs.mounts = [
  {path = "/lib", uri = "file:{{ gramine.runtimedir() }}"},
  {path = "{{ arch_libdir }}", uri = "file::{{ arch_libdir }}"},
  {path = "/usr/{{ arch_libdir }}", uri = "file::/usr/{{ arch_libdir }}"},
  {path = "/usr/lib/jvm/java-1.11.0-openjdk-amd64", uri = "/usr/lib/jvm/java-1.11.0-openjdk-amd64"},
]

# SGX options
# insecure so don't set to true in final version
sgx.debug = true
sgx.enclave_size = "8G"

# all files used by the executable and its dependencies
sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:/usr/lib/jvm/java-17-openjdk-amd64/",
  "file:helloworld.java",
  "file:java_args.txt"
]
